{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-reorder_2-ios.entry.js","../node_modules/@ionic/core/dist/esm-es5/haptic-4e92c885.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Reorder","ReorderGroup","tslib__WEBPACK_IMPORTED_MODULE_0__","_core_13ed1ad7_js__WEBPACK_IMPORTED_MODULE_1__","_haptic_4e92c885_js__WEBPACK_IMPORTED_MODULE_3__","class_1","hostRef","Object","this","prototype","onClick","ev","preventDefault","stopImmediatePropagation","render","class","name","lazy","defineProperty","get","enumerable","configurable","class_2","lastToIndex","cachedHeights","scrollElTop","scrollElBottom","scrollElInitial","containerTop","containerBottom","state","disabled","ionItemReorder","disabledChanged","gesture","setDisabled","componentDidLoad","contentEl","_a","_b","_this","_c","label","el","closest","getScrollElement","scrollEl","sent","Promise","resolve","then","bind","createGesture","gestureName","gesturePriority","threshold","direction","passive","canStart","detail","onStart","onMove","onEnd","componentDidUnload","destroy","undefined","complete","listOrReorder","completeSync","selectedItemEl","reorderEl","event","target","item","findReorderItem","data","heights","length","children","sum","i","child","offsetHeight","push","$ionIndex","box","getBoundingClientRect","top","bottom","scrollBox","scrollTop","AUTO_SCROLL_MARGIN","indexForItem","selectedItemHeight","classList","add","ITEM_REORDER_SELECTED","selectedItem","scroll","autoscroll","currentY","Math","max","min","deltaY","startY","normalizedY","toIndex","itemIndexForTop","fromIndex","reorderMove","style","transform","transition","remove","setTimeout","emit","from","to","len","ref","insertBefore","Array","isArray","reorderArray","itemHeight","value","posY","amount","SCROLL_JUMP","scrollBy","mode","element","node","container","parent","parentElement","array","splice","slice","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticSelection","engine","window","TapticEngine","selection","gestureSelectionStart","gestureSelectionChanged","gestureSelectionEnd"],"mappings":"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","file":"static/js/52.3111f50d.chunk.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { r as registerInstance, h, d as getIonMode, H as Host, c as createEvent, e as getElement } from './core-13ed1ad7.js';\nimport './config-bb99b659.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, c as hapticSelectionEnd } from './haptic-4e92c885.js';\n\nvar Reorder =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    registerInstance(this, hostRef);\n  }\n\n  class_1.prototype.onClick = function (ev) {\n    ev.preventDefault();\n    ev.stopImmediatePropagation();\n  };\n\n  class_1.prototype.render = function () {\n    return h(Host, {\n      class: getIonMode(this)\n    }, h(\"slot\", null, h(\"ion-icon\", {\n      name: \"reorder\",\n      lazy: false,\n      class: \"reorder-icon\"\n    })));\n  };\n\n  Object.defineProperty(class_1, \"style\", {\n    get: function get() {\n      return \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block;font-size:22px;font-size:34px;opacity:.4}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return class_1;\n}();\n\nvar ReorderGroup =\n/** @class */\nfunction () {\n  function class_2(hostRef) {\n    registerInstance(this, hostRef);\n    this.lastToIndex = -1;\n    this.cachedHeights = [];\n    this.scrollElTop = 0;\n    this.scrollElBottom = 0;\n    this.scrollElInitial = 0;\n    this.containerTop = 0;\n    this.containerBottom = 0;\n    this.state = 0\n    /* Idle */\n    ;\n    /**\n     * If `true`, the reorder will be hidden.\n     */\n\n    this.disabled = true;\n    this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n  }\n\n  class_2.prototype.disabledChanged = function () {\n    if (this.gesture) {\n      this.gesture.setDisabled(this.disabled);\n    }\n  };\n\n  class_2.prototype.componentDidLoad = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var contentEl, _a, _b;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            contentEl = this.el.closest('ion-content');\n            if (!contentEl) return [3\n            /*break*/\n            , 2];\n            _a = this;\n            return [4\n            /*yield*/\n            , contentEl.getScrollElement()];\n\n          case 1:\n            _a.scrollEl = _c.sent();\n            _c.label = 2;\n\n          case 2:\n            _b = this;\n            return [4\n            /*yield*/\n            , import('./index-2c4a5477.js')];\n\n          case 3:\n            _b.gesture = _c.sent().createGesture({\n              el: this.el,\n              gestureName: 'reorder',\n              gesturePriority: 110,\n              threshold: 0,\n              direction: 'y',\n              passive: false,\n              canStart: function canStart(detail) {\n                return _this.canStart(detail);\n              },\n              onStart: function onStart(ev) {\n                return _this.onStart(ev);\n              },\n              onMove: function onMove(ev) {\n                return _this.onMove(ev);\n              },\n              onEnd: function onEnd() {\n                return _this.onEnd();\n              }\n            });\n            this.disabledChanged();\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_2.prototype.componentDidUnload = function () {\n    this.onEnd();\n\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  };\n  /**\n   * Completes the reorder operation. Must be called by the `ionItemReorder` event.\n   *\n   * If a list of items is passed, the list will be reordered and returned in the\n   * proper order.\n   *\n   * If no parameters are passed or if `true` is passed in, the reorder will complete\n   * and the item will remain in the position it was dragged to. If `false` is passed,\n   * the reorder will complete and the item will bounce back to its original position.\n   *\n   * @param listOrReorder A list of items to be sorted and returned in the new order or a\n   * boolean of whether or not the reorder should reposition the item.\n   */\n\n\n  class_2.prototype.complete = function (listOrReorder) {\n    return Promise.resolve(this.completeSync(listOrReorder));\n  };\n\n  class_2.prototype.canStart = function (ev) {\n    if (this.selectedItemEl || this.state !== 0\n    /* Idle */\n    ) {\n        return false;\n      }\n\n    var target = ev.event.target;\n    var reorderEl = target.closest('ion-reorder');\n\n    if (!reorderEl) {\n      return false;\n    }\n\n    var item = findReorderItem(reorderEl, this.el);\n\n    if (!item) {\n      return false;\n    }\n\n    ev.data = item;\n    return true;\n  };\n\n  class_2.prototype.onStart = function (ev) {\n    ev.event.preventDefault();\n    var item = this.selectedItemEl = ev.data;\n    var heights = this.cachedHeights;\n    heights.length = 0;\n    var el = this.el;\n    var children = el.children;\n\n    if (!children || children.length === 0) {\n      return;\n    }\n\n    var sum = 0;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      sum += child.offsetHeight;\n      heights.push(sum);\n      child.$ionIndex = i;\n    }\n\n    var box = el.getBoundingClientRect();\n    this.containerTop = box.top;\n    this.containerBottom = box.bottom;\n\n    if (this.scrollEl) {\n      var scrollBox = this.scrollEl.getBoundingClientRect();\n      this.scrollElInitial = this.scrollEl.scrollTop;\n      this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n      this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n    } else {\n      this.scrollElInitial = 0;\n      this.scrollElTop = 0;\n      this.scrollElBottom = 0;\n    }\n\n    this.lastToIndex = indexForItem(item);\n    this.selectedItemHeight = item.offsetHeight;\n    this.state = 1\n    /* Active */\n    ;\n    item.classList.add(ITEM_REORDER_SELECTED);\n    hapticSelectionStart();\n  };\n\n  class_2.prototype.onMove = function (ev) {\n    var selectedItem = this.selectedItemEl;\n\n    if (!selectedItem) {\n      return;\n    } // Scroll if we reach the scroll margins\n\n\n    var scroll = this.autoscroll(ev.currentY); // // Get coordinate\n\n    var top = this.containerTop - scroll;\n    var bottom = this.containerBottom - scroll;\n    var currentY = Math.max(top, Math.min(ev.currentY, bottom));\n    var deltaY = scroll + currentY - ev.startY;\n    var normalizedY = currentY - top;\n    var toIndex = this.itemIndexForTop(normalizedY);\n\n    if (toIndex !== this.lastToIndex) {\n      var fromIndex = indexForItem(selectedItem);\n      this.lastToIndex = toIndex;\n      hapticSelectionChanged();\n      this.reorderMove(fromIndex, toIndex);\n    } // Update selected item position\n\n\n    selectedItem.style.transform = \"translateY(\" + deltaY + \"px)\";\n  };\n\n  class_2.prototype.onEnd = function () {\n    var _this = this;\n\n    var selectedItemEl = this.selectedItemEl;\n    this.state = 2\n    /* Complete */\n    ;\n\n    if (!selectedItemEl) {\n      this.state = 0\n      /* Idle */\n      ;\n      return;\n    }\n\n    var toIndex = this.lastToIndex;\n    var fromIndex = indexForItem(selectedItemEl);\n\n    if (toIndex === fromIndex) {\n      selectedItemEl.style.transition = 'transform 200ms ease-in-out';\n      selectedItemEl.style.transform = '';\n      selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n      setTimeout(function () {\n        return _this.completeSync();\n      }, 200);\n    } else {\n      this.ionItemReorder.emit({\n        from: fromIndex,\n        to: toIndex,\n        complete: this.completeSync.bind(this)\n      });\n    }\n\n    hapticSelectionEnd();\n  };\n\n  class_2.prototype.completeSync = function (listOrReorder) {\n    var selectedItemEl = this.selectedItemEl;\n\n    if (selectedItemEl && this.state === 2\n    /* Complete */\n    ) {\n        var children = this.el.children;\n        var len = children.length;\n        var toIndex = this.lastToIndex;\n        var fromIndex = indexForItem(selectedItemEl);\n\n        if (toIndex !== fromIndex && (!listOrReorder || listOrReorder === true)) {\n          var ref = fromIndex < toIndex ? children[toIndex + 1] : children[toIndex];\n          this.el.insertBefore(selectedItemEl, ref);\n        }\n\n        if (Array.isArray(listOrReorder)) {\n          listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n        }\n\n        for (var i = 0; i < len; i++) {\n          children[i].style['transform'] = '';\n        }\n\n        selectedItemEl.style.transition = '';\n        selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n        this.selectedItemEl = undefined;\n        this.state = 0\n        /* Idle */\n        ;\n      }\n\n    return listOrReorder;\n  };\n\n  class_2.prototype.itemIndexForTop = function (deltaY) {\n    var heights = this.cachedHeights;\n    var i = 0; // TODO: since heights is a sorted array of integers, we can do\n    // speed up the search using binary search. Remember that linear-search is still\n    // faster than binary-search for small arrays (<64) due CPU branch misprediction.\n\n    for (i = 0; i < heights.length; i++) {\n      if (heights[i] > deltaY) {\n        break;\n      }\n    }\n\n    return i;\n  };\n  /********* DOM WRITE ********* */\n\n\n  class_2.prototype.reorderMove = function (fromIndex, toIndex) {\n    var itemHeight = this.selectedItemHeight;\n    var children = this.el.children;\n\n    for (var i = 0; i < children.length; i++) {\n      var style = children[i].style;\n      var value = '';\n\n      if (i > fromIndex && i <= toIndex) {\n        value = \"translateY(\" + -itemHeight + \"px)\";\n      } else if (i < fromIndex && i >= toIndex) {\n        value = \"translateY(\" + itemHeight + \"px)\";\n      }\n\n      style['transform'] = value;\n    }\n  };\n\n  class_2.prototype.autoscroll = function (posY) {\n    if (!this.scrollEl) {\n      return 0;\n    }\n\n    var amount = 0;\n\n    if (posY < this.scrollElTop) {\n      amount = -SCROLL_JUMP;\n    } else if (posY > this.scrollElBottom) {\n      amount = SCROLL_JUMP;\n    }\n\n    if (amount !== 0) {\n      this.scrollEl.scrollBy(0, amount);\n    }\n\n    return this.scrollEl.scrollTop - this.scrollElInitial;\n  };\n\n  class_2.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return h(Host, {\n      class: (_a = {}, _a[mode] = true, _a['reorder-enabled'] = !this.disabled, _a['reorder-list-active'] = this.state !== 0\n      /* Idle */\n      , _a)\n    });\n  };\n\n  Object.defineProperty(class_2.prototype, \"el\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(class_2, \"watchers\", {\n    get: function get() {\n      return {\n        \"disabled\": [\"disabledChanged\"]\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(class_2, \"style\", {\n    get: function get() {\n      return \".reorder-list-active>*{-webkit-transition:-webkit-transform .3s;transition:-webkit-transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none!important;transition:none!important;-webkit-box-shadow:0 0 10px rgba(0,0,0,.4);box-shadow:0 0 10px rgba(0,0,0,.4);opacity:.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translateZ(0);transform:translateZ(0)}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return class_2;\n}();\n\nvar indexForItem = function indexForItem(element) {\n  return element['$ionIndex'];\n};\n\nvar findReorderItem = function findReorderItem(node, container) {\n  var parent;\n\n  while (node) {\n    parent = node.parentElement;\n\n    if (parent === container) {\n      return node;\n    }\n\n    node = parent;\n  }\n\n  return undefined;\n};\n\nvar AUTO_SCROLL_MARGIN = 60;\nvar SCROLL_JUMP = 10;\nvar ITEM_REORDER_SELECTED = 'reorder-selected';\n\nvar reorderArray = function reorderArray(array, from, to) {\n  var element = array[from];\n  array.splice(from, 1);\n  array.splice(to, 0, element);\n  return array.slice();\n};\n\nexport { Reorder as ion_reorder, ReorderGroup as ion_reorder_group };","/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nvar hapticSelection = function hapticSelection() {\n  var engine = window.TapticEngine;\n\n  if (engine) {\n    engine.selection();\n  }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\n\n\nvar hapticSelectionStart = function hapticSelectionStart() {\n  var engine = window.TapticEngine;\n\n  if (engine) {\n    engine.gestureSelectionStart();\n  }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\n\n\nvar hapticSelectionChanged = function hapticSelectionChanged() {\n  var engine = window.TapticEngine;\n\n  if (engine) {\n    engine.gestureSelectionChanged();\n  }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\n\n\nvar hapticSelectionEnd = function hapticSelectionEnd() {\n  var engine = window.TapticEngine;\n\n  if (engine) {\n    engine.gestureSelectionEnd();\n  }\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };"],"sourceRoot":""}