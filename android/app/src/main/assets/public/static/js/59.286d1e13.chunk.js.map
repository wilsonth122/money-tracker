{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-infinite-scroll_2-md.entry.js","../node_modules/@ionic/core/dist/esm-es5/index-cae2ca23.js"],"names":["__webpack_require__","r","__webpack_exports__","d","InfiniteScroll","InfiniteScrollContent","tslib__WEBPACK_IMPORTED_MODULE_0__","_core_13ed1ad7_js__WEBPACK_IMPORTED_MODULE_1__","_config_bb99b659_js__WEBPACK_IMPORTED_MODULE_2__","_index_cae2ca23_js__WEBPACK_IMPORTED_MODULE_3__","class_1","hostRef","_this","this","Object","thrPx","thrPc","didFire","isBusy","isLoading","threshold","disabled","position","onScroll","scrollEl","canStart","infiniteHeight","el","offsetHeight","scrollTop","scrollHeight","height","ionInfinite","emit","prototype","thresholdChanged","val","lastIndexOf","parseFloat","disabledChanged","enableScrollEvents","componentDidLoad","contentEl","_a","_b","label","closest","getScrollElement","sent","clientHeight","componentDidUnload","undefined","complete","prev_1","requestAnimationFrame","newScrollTop","shouldListen","addEventListener","removeEventListener","render","mode","class","defineProperty","get","enumerable","configurable","class_2","loadingSpinner","name","loadingText","innerHTML","sanitizeDOMString","untrustedString","documentFragment_1","document","createDocumentFragment","workingDiv","createElement","appendChild","blockedTags","forEach","blockedTag","getElementsToRemove","querySelectorAll","elementIndex","length","element","parentNode","removeChild","childElements","getElementChildren","childIndex","sanitizeElement","documentFragmentChildren","fragmentDiv","getInnerDiv","querySelector","err","console","error","nodeType","i","attributes","attribute","attributeName","allowedAttributes","includes","toLowerCase","attributeValue","value","removeAttribute","children","childNodes"],"mappings":"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","file":"static/js/59.286d1e13.chunk.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { r as registerInstance, c as createEvent, w as writeTask, f as readTask, d as getIonMode, h, e as getElement, H as Host } from './core-13ed1ad7.js';\nimport { b as config } from './config-bb99b659.js';\nimport { s as sanitizeDOMString } from './index-cae2ca23.js';\n\nvar InfiniteScroll =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    this.thrPx = 0;\n    this.thrPc = 0;\n    this.didFire = false;\n    this.isBusy = false;\n    this.isLoading = false;\n    /**\n     * The threshold distance from the bottom\n     * of the content to call the `infinite` output event when scrolled.\n     * The threshold value can be either a percent, or\n     * in pixels. For example, use the value of `10%` for the `infinite`\n     * output event to get called when the user has scrolled 10%\n     * from the bottom of the page. Use the value `100px` when the\n     * scroll is within 100 pixels from the bottom of the page.\n     */\n\n    this.threshold = '15%';\n    /**\n     * If `true`, the infinite scroll will be hidden and scroll event listeners\n     * will be removed.\n     *\n     * Set this to true to disable the infinite scroll from actively\n     * trying to receive new data while scrolling. This is useful\n     * when it is known that there is no more data that can be added, and\n     * the infinite scroll is no longer needed.\n     */\n\n    this.disabled = false;\n    /**\n     * The position of the infinite scroll element.\n     * The value can be either `top` or `bottom`.\n     */\n\n    this.position = 'bottom';\n\n    this.onScroll = function () {\n      var scrollEl = _this.scrollEl;\n\n      if (!scrollEl || !_this.canStart()) {\n        return 1;\n      }\n\n      var infiniteHeight = _this.el.offsetHeight;\n\n      if (infiniteHeight === 0) {\n        // if there is no height of this element then do nothing\n        return 2;\n      }\n\n      var scrollTop = scrollEl.scrollTop;\n      var scrollHeight = scrollEl.scrollHeight;\n      var height = scrollEl.offsetHeight;\n      var threshold = _this.thrPc !== 0 ? height * _this.thrPc : _this.thrPx;\n      var distanceFromInfinite = _this.position === 'bottom' ? scrollHeight - infiniteHeight - scrollTop - threshold - height : scrollTop - infiniteHeight - threshold;\n\n      if (distanceFromInfinite < 0) {\n        if (!_this.didFire) {\n          _this.isLoading = true;\n          _this.didFire = true;\n\n          _this.ionInfinite.emit();\n\n          return 3;\n        }\n      } else {\n        _this.didFire = false;\n      }\n\n      return 4;\n    };\n\n    this.ionInfinite = createEvent(this, \"ionInfinite\", 7);\n  }\n\n  class_1.prototype.thresholdChanged = function () {\n    var val = this.threshold;\n\n    if (val.lastIndexOf('%') > -1) {\n      this.thrPx = 0;\n      this.thrPc = parseFloat(val) / 100;\n    } else {\n      this.thrPx = parseFloat(val);\n      this.thrPc = 0;\n    }\n  };\n\n  class_1.prototype.disabledChanged = function () {\n    var disabled = this.disabled;\n\n    if (disabled) {\n      this.isLoading = false;\n      this.isBusy = false;\n    }\n\n    this.enableScrollEvents(!disabled);\n  };\n\n  class_1.prototype.componentDidLoad = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var contentEl, _a;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            contentEl = this.el.closest('ion-content');\n            if (!contentEl) return [3\n            /*break*/\n            , 2];\n            _a = this;\n            return [4\n            /*yield*/\n            , contentEl.getScrollElement()];\n\n          case 1:\n            _a.scrollEl = _b.sent();\n            _b.label = 2;\n\n          case 2:\n            this.thresholdChanged();\n            this.disabledChanged();\n\n            if (this.position === 'top') {\n              writeTask(function () {\n                if (_this.scrollEl) {\n                  _this.scrollEl.scrollTop = _this.scrollEl.scrollHeight - _this.scrollEl.clientHeight;\n                }\n              });\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_1.prototype.componentDidUnload = function () {\n    this.enableScrollEvents(false);\n    this.scrollEl = undefined;\n  };\n  /**\n   * Call `complete()` within the `ionInfinite` output event handler when\n   * your async operation has completed. For example, the `loading`\n   * state is while the app is performing an asynchronous operation,\n   * such as receiving more data from an AJAX request to add more items\n   * to a data list. Once the data has been received and UI updated, you\n   * then call this method to signify that the loading has completed.\n   * This method will change the infinite scroll's state from `loading`\n   * to `enabled`.\n   */\n\n\n  class_1.prototype.complete = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var scrollEl, prev_1;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        scrollEl = this.scrollEl;\n\n        if (!this.isLoading || !scrollEl) {\n          return [2\n          /*return*/\n          ];\n        }\n\n        this.isLoading = false;\n\n        if (this.position === 'top') {\n          /**\n           * New content is being added at the top, but the scrollTop position stays the same,\n           * which causes a scroll jump visually. This algorithm makes sure to prevent this.\n           * (Frame 1)\n           *    - complete() is called, but the UI hasn't had time to update yet.\n           *    - Save the current content dimensions.\n           *    - Wait for the next frame using _dom.read, so the UI will be updated.\n           * (Frame 2)\n           *    - Read the new content dimensions.\n           *    - Calculate the height difference and the new scroll position.\n           *    - Delay the scroll position change until other possible dom reads are done using _dom.write to be performant.\n           * (Still frame 2, if I'm correct)\n           *    - Change the scroll position (= visually maintain the scroll position).\n           *    - Change the state to re-enable the InfiniteScroll.\n           *    - This should be after changing the scroll position, or it could\n           *    cause the InfiniteScroll to be triggered again immediately.\n           * (Frame 3)\n           *    Done.\n           */\n          this.isBusy = true;\n          prev_1 = scrollEl.scrollHeight - scrollEl.scrollTop; // ******** DOM READ ****************\n\n          requestAnimationFrame(function () {\n            readTask(function () {\n              // UI has updated, save the new content dimensions\n              var scrollHeight = scrollEl.scrollHeight; // New content was added on top, so the scroll position should be changed immediately to prevent it from jumping around\n\n              var newScrollTop = scrollHeight - prev_1; // ******** DOM WRITE ****************\n\n              requestAnimationFrame(function () {\n                writeTask(function () {\n                  scrollEl.scrollTop = newScrollTop;\n                  _this.isBusy = false;\n                });\n              });\n            });\n          });\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  class_1.prototype.canStart = function () {\n    return !this.disabled && !this.isBusy && !!this.scrollEl && !this.isLoading;\n  };\n\n  class_1.prototype.enableScrollEvents = function (shouldListen) {\n    if (this.scrollEl) {\n      if (shouldListen) {\n        this.scrollEl.addEventListener('scroll', this.onScroll);\n      } else {\n        this.scrollEl.removeEventListener('scroll', this.onScroll);\n      }\n    }\n  };\n\n  class_1.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    var disabled = this.disabled;\n    return h(Host, {\n      class: (_a = {}, _a[mode] = true, _a['infinite-scroll-loading'] = this.isLoading, _a['infinite-scroll-enabled'] = !disabled, _a)\n    });\n  };\n\n  Object.defineProperty(class_1.prototype, \"el\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(class_1, \"watchers\", {\n    get: function get() {\n      return {\n        \"threshold\": [\"thresholdChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(class_1, \"style\", {\n    get: function get() {\n      return \"ion-infinite-scroll{display:none;width:100%}.infinite-scroll-enabled{display:block}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return class_1;\n}();\n\nvar InfiniteScrollContent =\n/** @class */\nfunction () {\n  function class_2(hostRef) {\n    registerInstance(this, hostRef);\n  }\n\n  class_2.prototype.componentDidLoad = function () {\n    if (this.loadingSpinner === undefined) {\n      var mode = getIonMode(this);\n      this.loadingSpinner = config.get('infiniteLoadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\n    }\n  };\n\n  class_2.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return h(Host, {\n      class: (_a = {}, _a[mode] = true, // Used internally for styling\n      _a[\"infinite-scroll-content-\" + mode] = true, _a)\n    }, h(\"div\", {\n      class: \"infinite-loading\"\n    }, this.loadingSpinner && h(\"div\", {\n      class: \"infinite-loading-spinner\"\n    }, h(\"ion-spinner\", {\n      name: this.loadingSpinner\n    })), this.loadingText && h(\"div\", {\n      class: \"infinite-loading-text\",\n      innerHTML: sanitizeDOMString(this.loadingText)\n    })));\n  };\n\n  Object.defineProperty(class_2, \"style\", {\n    get: function get() {\n      return \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{margin-left:32px;margin-right:32px;margin-top:4px;margin-bottom:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.infinite-loading-text{margin-left:unset;margin-right:unset;-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px}}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-md .infinite-loading-text{color:var(--ion-color-step-600,#666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-crescent circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-small-md line{stroke:var(--ion-color-step-600,#666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600,#666)}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return class_2;\n}();\n\nexport { InfiniteScroll as ion_infinite_scroll, InfiniteScrollContent as ion_infinite_scroll_content };","/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nvar sanitizeDOMString = function sanitizeDOMString(untrustedString) {\n  try {\n    if (typeof untrustedString !== 'string' || untrustedString === '') {\n      return untrustedString;\n    }\n    /**\n     * Create a document fragment\n     * separate from the main DOM,\n     * create a div to do our work in\n     */\n\n\n    var documentFragment_1 = document.createDocumentFragment();\n    var workingDiv = document.createElement('div');\n    documentFragment_1.appendChild(workingDiv);\n    workingDiv.innerHTML = untrustedString;\n    /**\n     * Remove any elements\n     * that are blocked\n     */\n\n    blockedTags.forEach(function (blockedTag) {\n      var getElementsToRemove = documentFragment_1.querySelectorAll(blockedTag);\n\n      for (var elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n        var element = getElementsToRemove[elementIndex];\n\n        if (element.parentNode) {\n          element.parentNode.removeChild(element);\n        } else {\n          documentFragment_1.removeChild(element);\n        }\n        /**\n         * We still need to sanitize\n         * the children of this element\n         * as they are left behind\n         */\n\n\n        var childElements = getElementChildren(element);\n        /* tslint:disable-next-line */\n\n        for (var childIndex = 0; childIndex < childElements.length; childIndex++) {\n          sanitizeElement(childElements[childIndex]);\n        }\n      }\n    });\n    /**\n     * Go through remaining elements and remove\n     * non-allowed attribs\n     */\n    // IE does not support .children on document fragments, only .childNodes\n\n    var documentFragmentChildren = getElementChildren(documentFragment_1);\n    /* tslint:disable-next-line */\n\n    for (var childIndex = 0; childIndex < documentFragmentChildren.length; childIndex++) {\n      sanitizeElement(documentFragmentChildren[childIndex]);\n    } // Append document fragment to div\n\n\n    var fragmentDiv = document.createElement('div');\n    fragmentDiv.appendChild(documentFragment_1); // First child is always the div we did our work in\n\n    var getInnerDiv = fragmentDiv.querySelector('div');\n    return getInnerDiv !== null ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n  } catch (err) {\n    console.error(err);\n    return '';\n  }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\n\n\nvar sanitizeElement = function sanitizeElement(element) {\n  // IE uses childNodes, so ignore nodes that are not elements\n  if (element.nodeType && element.nodeType !== 1) {\n    return;\n  }\n\n  for (var i = element.attributes.length - 1; i >= 0; i--) {\n    var attribute = element.attributes[i];\n    var attributeName = attribute.name; // remove non-allowed attribs\n\n    if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n      element.removeAttribute(attributeName);\n      continue;\n    } // clean up any allowed attribs\n    // that attempt to do any JS funny-business\n\n\n    var attributeValue = attribute.value;\n    /* tslint:disable-next-line */\n\n    if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n      element.removeAttribute(attributeName);\n    }\n  }\n  /**\n   * Sanitize any nested children\n   */\n\n\n  var childElements = getElementChildren(element);\n  /* tslint:disable-next-line */\n\n  for (var i = 0; i < childElements.length; i++) {\n    sanitizeElement(childElements[i]);\n  }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\n\n\nvar getElementChildren = function getElementChildren(element) {\n  return element.children != null ? element.children : element.childNodes;\n};\n\nvar allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nvar blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\nexport { sanitizeDOMString as s };"],"sourceRoot":""}