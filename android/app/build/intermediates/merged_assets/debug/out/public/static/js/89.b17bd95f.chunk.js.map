{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-split-pane-md.entry.js"],"names":["__webpack_require__","r","__webpack_exports__","d","SplitPane","_core_13ed1ad7_js__WEBPACK_IMPORTED_MODULE_0__","QUERY","xs","sm","md","lg","xl","never","class_1","hostRef","Object","this","visible","disabled","when","ionSplitPaneVisible","prototype","visibleChanged","detail","isPane","bind","emit","componentDidLoad","styleChildren","updateState","componentDidUnload","rmL","undefined","_this","query","mediaQuery","length","window","matchMedia","callback_1","q","matches","mediaList_1","addListener","removeListener","element","parentElement","el","classList","contains","contentId","children","nu","childElementCount","foundMain","i","child","isMain","id","hasAttribute","console","warn","setPaneClass","render","_a","mode","class","defineProperty","get","enumerable","configurable","toAdd","toRemove","add","remove"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,mCAAAE,IAAA,IAAAC,EAAAL,EAAA,IAIAM,GAJAN,EAAA,IAIA,CACAO,GAAA,mBACAC,GAAA,qBACAC,GAAA,qBACAC,GAAA,qBACAC,GAAA,sBACAC,MAAA,KAGAR,EAEA,WACA,SAAAS,EAAAC,GACIC,OAAAV,EAAA,EAAAU,CAAgBC,KAAAF,GACpBE,KAAAC,SAAA,EAKAD,KAAAE,UAAA,EAOAF,KAAAG,KAAAb,EAAA,GACAU,KAAAI,oBAA+BL,OAAAV,EAAA,EAAAU,CAAWC,KAAA,yBA4I1C,OAzIAH,EAAAQ,UAAAC,eAAA,SAAAL,GACA,IAAAM,EAAA,CACAN,UACAO,OAAAR,KAAAQ,OAAAC,KAAAT,OAEAA,KAAAI,oBAAAM,KAAAH,IAGAV,EAAAQ,UAAAM,iBAAA,WACAX,KAAAY,gBACAZ,KAAAa,eAGAhB,EAAAQ,UAAAS,mBAAA,WACAd,KAAAe,MACAf,KAAAe,MACAf,KAAAe,SAAAC,IAIAnB,EAAAQ,UAAAQ,YAAA,WACA,IAAAI,EAAAjB,KAQA,GANAA,KAAAe,MACAf,KAAAe,MACAf,KAAAe,SAAAC,GAIAhB,KAAAE,SACAF,KAAAC,SAAA,MADA,CAMA,IAAAiB,EAAAlB,KAAAG,KAEA,sBAAAe,EAAA,CAMA,IAAAC,EAAA7B,EAAA4B,MAEA,OAAAC,EAAAC,QAKA,GAAAC,OAAAC,WAAA,CAEA,IAAAC,EAAA,SAAAC,GACAP,EAAAhB,QAAAuB,EAAAC,SAGAC,EAAAL,OAAAC,WAAAH,GACAO,EAAAC,YAAAJ,GAEAvB,KAAAe,IAAA,WACA,OAAAW,EAAAE,eAAAL,IAGAvB,KAAAC,QAAAyB,EAAAD,cAjBAzB,KAAAC,SAAA,OARAD,KAAAC,QAAAiB,IA6BArB,EAAAQ,UAAAG,OAAA,SAAAqB,GACA,QAAA7B,KAAAC,UAIA4B,EAAAC,gBAAA9B,KAAA+B,IAAAF,EAAAG,UAAAC,SAvGA,qBA0GApC,EAAAQ,UAAAO,cAAA,WAMA,IALA,IAAAsB,EAAAlC,KAAAkC,UACAC,EAAAnC,KAAA+B,GAAAI,SACAC,EAAApC,KAAA+B,GAAAM,kBACAC,GAAA,EAEAC,EAAA,EAAmBA,EAAAH,EAAQG,IAAA,CAC3B,IAAAC,EAAAL,EAAAI,GACAE,OAAAzB,IAAAkB,EAAAM,EAAAE,KAAAR,EAAAM,EAAAG,aAAA,QAEA,GAAAF,EAAA,CACA,GAAAH,EAEA,YADAM,QAAAC,KAAA,kDAIAP,GAAA,EAGAQ,EAAAN,EAAAC,GAGAH,GACAM,QAAAC,KAAA,mDAIAhD,EAAAQ,UAAA0C,OAAA,WACA,IAAAC,EAEAC,EAAelD,OAAAV,EAAA,EAAAU,CAAUC,MACzB,OAAWD,OAAAV,EAAA,EAAAU,CAAEV,EAAA,EAAI,CACjB6D,OAAAF,EAAA,GAAqBA,EAAAC,IAAA,EACrBD,EAAA,cAAAC,IAAA,EAAAD,EAAA,sBAAAhD,KAAAC,QAAA+C,MAIAjD,OAAAoD,eAAAtD,EAAAQ,UAAA,MACA+C,IAAA,WACA,OAAarD,OAAAV,EAAA,EAAAU,CAAUC,OAEvBqD,YAAA,EACAC,cAAA,IAEAvD,OAAAoD,eAAAtD,EAAA,YACAuD,IAAA,WACA,OACAnD,QAAA,mBACAC,SAAA,gBACAC,KAAA,kBAGAkD,YAAA,EACAC,cAAA,IAEAvD,OAAAoD,eAAAtD,EAAA,SACAuD,IAAA,WACA,+nCAEAC,YAAA,EACAC,cAAA,IAEAzD,EA5JA,GA+JAiD,EAAA,SAAAf,EAAAU,GACA,IAAAc,EACAC,EAEAf,GACAc,EAjLA,kBAkLAC,EAjLA,oBAmLAD,EAnLA,kBAoLAC,EArLA,mBAwLA,IAAAxB,EAAAD,EAAAC,UACAA,EAAAyB,IAAAF,GACAvB,EAAA0B,OAAAF","file":"static/js/89.b17bd95f.chunk.js","sourcesContent":["import { r as registerInstance, c as createEvent, d as getIonMode, h, e as getElement, H as Host } from './core-13ed1ad7.js';\nimport './config-bb99b659.js';\nvar SPLIT_PANE_MAIN = 'split-pane-main';\nvar SPLIT_PANE_SIDE = 'split-pane-side';\nvar QUERY = {\n  'xs': '(min-width: 0px)',\n  'sm': '(min-width: 576px)',\n  'md': '(min-width: 768px)',\n  'lg': '(min-width: 992px)',\n  'xl': '(min-width: 1200px)',\n  'never': ''\n};\n\nvar SplitPane =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    registerInstance(this, hostRef);\n    this.visible = false;\n    /**\n     * If `true`, the split pane will be hidden.\n     */\n\n    this.disabled = false;\n    /**\n     * When the split-pane should be shown.\n     * Can be a CSS media query expression, or a shortcut expression.\n     * Can also be a boolean expression.\n     */\n\n    this.when = QUERY['lg'];\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n  }\n\n  class_1.prototype.visibleChanged = function (visible) {\n    var detail = {\n      visible: visible,\n      isPane: this.isPane.bind(this)\n    };\n    this.ionSplitPaneVisible.emit(detail);\n  };\n\n  class_1.prototype.componentDidLoad = function () {\n    this.styleChildren();\n    this.updateState();\n  };\n\n  class_1.prototype.componentDidUnload = function () {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n  };\n\n  class_1.prototype.updateState = function () {\n    var _this = this;\n\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    } // Check if the split-pane is disabled\n\n\n    if (this.disabled) {\n      this.visible = false;\n      return;\n    } // When query is a boolean\n\n\n    var query = this.when;\n\n    if (typeof query === 'boolean') {\n      this.visible = query;\n      return;\n    } // When query is a string, let's find first if it is a shortcut\n\n\n    var mediaQuery = QUERY[query] || query; // Media query is empty or null, we hide it\n\n    if (mediaQuery.length === 0) {\n      this.visible = false;\n      return;\n    }\n\n    if (window.matchMedia) {\n      // Listen on media query\n      var callback_1 = function callback_1(q) {\n        _this.visible = q.matches;\n      };\n\n      var mediaList_1 = window.matchMedia(mediaQuery);\n      mediaList_1.addListener(callback_1);\n\n      this.rmL = function () {\n        return mediaList_1.removeListener(callback_1);\n      };\n\n      this.visible = mediaList_1.matches;\n    }\n  };\n\n  class_1.prototype.isPane = function (element) {\n    if (!this.visible) {\n      return false;\n    }\n\n    return element.parentElement === this.el && element.classList.contains(SPLIT_PANE_SIDE);\n  };\n\n  class_1.prototype.styleChildren = function () {\n    var contentId = this.contentId;\n    var children = this.el.children;\n    var nu = this.el.childElementCount;\n    var foundMain = false;\n\n    for (var i = 0; i < nu; i++) {\n      var child = children[i];\n      var isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\n\n      if (isMain) {\n        if (foundMain) {\n          console.warn('split pane cannot have more than one main node');\n          return;\n        }\n\n        foundMain = true;\n      }\n\n      setPaneClass(child, isMain);\n    }\n\n    if (!foundMain) {\n      console.warn('split pane does not have a specified main node');\n    }\n  };\n\n  class_1.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return h(Host, {\n      class: (_a = {}, _a[mode] = true, // Used internally for styling\n      _a[\"split-pane-\" + mode] = true, _a['split-pane-visible'] = this.visible, _a)\n    });\n  };\n\n  Object.defineProperty(class_1.prototype, \"el\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(class_1, \"watchers\", {\n    get: function get() {\n      return {\n        \"visible\": [\"visibleChanged\"],\n        \"disabled\": [\"updateState\"],\n        \"when\": [\"updateState\"]\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(class_1, \"style\", {\n    get: function get() {\n      return \"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-md{--border:1px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-150,rgba(0,0,0,0.13))))}.split-pane-md.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-md.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return class_1;\n}();\n\nvar setPaneClass = function setPaneClass(el, isMain) {\n  var toAdd;\n  var toRemove;\n\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  } else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n\n  var classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n};\n\nexport { SplitPane as ion_split_pane };"],"sourceRoot":""}